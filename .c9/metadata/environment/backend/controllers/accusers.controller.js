{"changed":false,"filter":false,"title":"accusers.controller.js","tooltip":"/backend/controllers/accusers.controller.js","value":"//const jsonMessagesPath = __dirname + \"/../assets/jsonMessages/\";\n//const jsonMessages = require(jsonMessagesPath + \"bd\");\n//const connect = require('../config/connectMySQL'); //função de leitura que retorna o resultado no callback\n\n\nfunction getAll(req, res) {\n    let sql = \"SELECT idAccuser, Name, Email, Address, Telephone, Password FROM Accusers order by idAccuser desc\";\n    global.connection.query(sql, function(err, results) {\n        if (err) {\n            console.log(err);\n            return res.status(500).end();\n        }\n        res.json(results);\n    });      \n}\n\nfunction getOne(req, res) {\n    let sql = \"SELECT idAccuser, Name, Email, Address, Telephone, Password FROM Accusers WHERE idAccuser=?\";\n    global.connection.query(sql, req.params.idAccuser, function(err, results) {\n        if (err) return res.status(500).end();\n        if (results.length == 0) return res.status(404).end();\n        return res.json(results[0]);\n    });\n}\n\n\nfunction createOne(req, res) {\n    let sql = \"INSERT INTO Accusers (Name, Email, Address, Telephone, Password) VALUES (?,?,?,?,?)\";\n    global.connection.query(sql, [\n        req.body.Name,\n        req.body.Email,\n        req.body.Address,\n        req.body.Telephone,\n        req.body.Password\n    ], function(err, results) {\n        if (err) return res.status(500).end();\n        res.json(results);\n    });\n}\n\n\nfunction updateOne(req, res) {\n    let sql = \"UPDATE Accusers SET Name=?, Email=?, Address=?, Telephone=?, Password=? WHERE idAccuser=?\"; \n    global.connection.query(sql, [\n        req.body.Name,\n        req.body.Email,\n        req.body.Address,\n        req.body.Telephone,\n        req.body.Password, \n        req.params.idAccuser\n      ], function(err, results) {\n            if (err) return res.status(500).end();\n            res.json(results);\n    });\n}\n\nfunction deleteOne(req, res) {\n    let sql = \"DELETE from Accusers WHERE idAccuser=?\"; \n    global.connection.query(sql, req.params.idAccuser, function(err, results){\n        if (err) return res.status(500).end();\n        res.status(204).end();\n    });\n}\n\n\n\n\n/*\nfunction read(req, res) {\n    //criar e executar a query de leitura na BD\n    const query = connect.con.query('SELECT idAccuser, Name, Email, Address, Telephone, Password FROM Accusers order by idAccuser desc', function(err, rows, fields) {\n        console.log(query.sql);\n        if (err) {\n            console.log(err);\n            res.status(jsonMessages.db.dbError.status).send(jsonMessages.db.dbError);\n        }\n        else {\n            if (rows.length == 0) {\n                res.status(jsonMessages.db.noRecords.status).send(jsonMessages.db.noRecords);\n            }\n            else {\n                res.send(rows);\n            }\n        }\n    });\n}\n\nfunction save(req, res) {\n    //receber os dados do formulário que são enviados por post\n    const Name = req.sanitize('Name').escape();\n    const Email = req.sanitize('Email').escape();\n    const Address = req.sanitize('Address').escape();\n    const Telephone = req.sanitize('Telephone').escape();\n    const Password = req.sanitize('Password').escape();\n    req.checkBody(\"Name\", \"Insira apenas texto\").isAlpha();\n    req.checkBody(\"Email\", \"Insira um email válido\").isEmail();\n    req.checkBody(\"Address\", \"Insira uma direção válida\").isAddress();\n    req.checkBody(\"Telephone\", \"Insira Telephone\").isTelephone();\n    req.checkBody(\"Password\", \"Insira Password\").isPassword();\n    \n    \n    const errors = req.validationErrors();\n    if (errors) {\n        res.send(errors);\n        return;\n    }\n    else {\n        if (Name != \"NULL\" && Email != \"NULL\" && Address != \"NULL\" && Telephone != \"NULL\" && Password != \"NULL\" && typeof(Name) != \"undefined\") {\n            const post = { Name: Name, Email: Email, Address: Address, Telephone: Telephone, Password: Password};\n            //criar e executar a query de gravação na BD para inserir os dados presentes no post\n            const query = connect.con.query('INSERT INTO Acussers SET ?', post, function(err, rows, fields) {\n                console.log(query.sql);\n                if (!err) {\n                    res.status(jsonMessages.db.successInsert.status).location(rows.insertId).send(jsonMessages.db.successInsert);\n                }\n                else {\n                    console.log(err);\n                    res.send(jsonMessages.db.dbError);\n                }\n            });\n        }\n        else\n\n            res.status(jsonMessages.db.requiredData.status).send(jsonMessages.db.requiredData);\n    }\n}\n*/\n\n//exportar as funções\nmodule.exports = {\n    list: getAll,\n    read: getOne,\n    create: createOne,\n    update: updateOne,\n    delete: deleteOne\n}\n","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":2,"column":30},"end":{"row":2,"column":30},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1607556674052}