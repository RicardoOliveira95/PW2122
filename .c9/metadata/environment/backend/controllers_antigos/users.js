{"changed":true,"filter":false,"title":"users.js","tooltip":"/backend/controllers_antigos/users.js","value":"function getAll(req, res) {\n    let sql = \"SELECT username, name, email FROM users\";\n    global.connection.query(sql, function(err, results) {\n        if (err) {\n            console.log(err);\n            return res.status(500).json(err);\n        }\n        console.log(\"USERS\")\n        res.json(results);\n    });      \n}\n\nfunction getOne(req, res) {\n    let sql = \"SELECT username, name, email FROM users WHERE username=?\";\n    global.connection.query(sql, req.params.username, function(err, results) {\n        if (err) return res.status(500).end();\n        if (results.length == 0) return res.status(404).end();\n        return res.json(results[0]);\n    });\n}\n\nfunction createOne(req, res) {\n    let sql = \"INSERT INTO users (username, name, email, password) VALUES (?,?,?,?)\";\n    global.connection.query(sql, [\n        req.body.username, \n        req.body.name,\n        req.body.email,\n        req.body.password\n    ], function(err, results) {\n        if (err) return res.status(500).end();\n        res.json(results);\n    });\n}\n\nfunction updateOne(req, res) {\n    let sql = \"UPDATE users SET name=?, email=?, password=? WHERE username=?\"; \n    global.connection.query(sql, [\n        req.body.name,\n        req.body.email,\n        req.body.password, \n        req.params.username\n      ], function(err, results) {\n            if (err) return res.status(500).end();\n            res.json(results);\n    });\n}\n\nfunction deleteOne(req, res) {\n    let sql = \"DELETE from users WHERE username=?\"; \n    global.connection.query(sql, req.params.username, function(err, results){\n        if (err) return res.status(500).end();\n        res.status(204).end();\n    });\n}\n\nmodule.exports = {\n    list: getAll,\n    read: getOne,\n    create: createOne,\n    update: updateOne,\n    delete: deleteOne\n}","undoManager":{"mark":3,"position":1,"stack":[[{"start":{"row":61,"column":1},"end":{"row":122,"column":1},"action":"insert","lines":["function getAll(req, res) {","    let sql = \"SELECT username, name, email FROM users\";","    global.connection.query(sql, function(err, results) {","        console.log(\"USERS\")","        if (err) {","            console.log(err);","            return res.status(500).json(err);","        }","        res.json(results);","    });      ","}","","function getOne(req, res) {","    let sql = \"SELECT username, name, email FROM users WHERE username=?\";","    global.connection.query(sql, req.params.username, function(err, results) {","        if (err) return res.status(500).end();","        if (results.length == 0) return res.status(404).end();","        return res.json(results[0]);","    });","}","","function createOne(req, res) {","    let sql = \"INSERT INTO users (username, name, email, password) VALUES (?,?,?,?)\";","    global.connection.query(sql, [","        req.body.username, ","        req.body.name,","        req.body.email,","        req.body.password","    ], function(err, results) {","        if (err) return res.status(500).end();","        res.json(results);","    });","}","","function updateOne(req, res) {","    let sql = \"UPDATE users SET name=?, email=?, password=? WHERE username=?\"; ","    global.connection.query(sql, [","        req.body.name,","        req.body.email,","        req.body.password, ","        req.params.username","      ], function(err, results) {","            if (err) return res.status(500).end();","            res.json(results);","    });","}","","function deleteOne(req, res) {","    let sql = \"DELETE from users WHERE username=?\"; ","    global.connection.query(sql, req.params.username, function(err, results){","        if (err) return res.status(500).end();","        res.status(204).end();","    });","}","","module.exports = {","    list: getAll,","    read: getOne,","    create: createOne,","    update: updateOne,","    delete: deleteOne","}"],"id":52,"ignore":true}],[{"start":{"row":61,"column":1},"end":{"row":122,"column":1},"action":"remove","lines":["function getAll(req, res) {","    let sql = \"SELECT username, name, email FROM users\";","    global.connection.query(sql, function(err, results) {","        console.log(\"USERS\")","        if (err) {","            console.log(err);","            return res.status(500).json(err);","        }","        res.json(results);","    });      ","}","","function getOne(req, res) {","    let sql = \"SELECT username, name, email FROM users WHERE username=?\";","    global.connection.query(sql, req.params.username, function(err, results) {","        if (err) return res.status(500).end();","        if (results.length == 0) return res.status(404).end();","        return res.json(results[0]);","    });","}","","function createOne(req, res) {","    let sql = \"INSERT INTO users (username, name, email, password) VALUES (?,?,?,?)\";","    global.connection.query(sql, [","        req.body.username, ","        req.body.name,","        req.body.email,","        req.body.password","    ], function(err, results) {","        if (err) return res.status(500).end();","        res.json(results);","    });","}","","function updateOne(req, res) {","    let sql = \"UPDATE users SET name=?, email=?, password=? WHERE username=?\"; ","    global.connection.query(sql, [","        req.body.name,","        req.body.email,","        req.body.password, ","        req.params.username","      ], function(err, results) {","            if (err) return res.status(500).end();","            res.json(results);","    });","}","","function deleteOne(req, res) {","    let sql = \"DELETE from users WHERE username=?\"; ","    global.connection.query(sql, req.params.username, function(err, results){","        if (err) return res.status(500).end();","        res.status(204).end();","    });","}","","module.exports = {","    list: getAll,","    read: getOne,","    create: createOne,","    update: updateOne,","    delete: deleteOne","}"],"id":53,"ignore":true}],[{"start":{"row":12,"column":19},"end":{"row":12,"column":20},"action":"remove","lines":["s"],"id":61}],[{"start":{"row":12,"column":18},"end":{"row":12,"column":19},"action":"insert","lines":["1"],"id":61},{"start":{"row":12,"column":19},"end":{"row":12,"column":20},"action":"insert","lines":["s"]}],[{"start":{"row":12,"column":0},"end":{"row":12,"column":20},"action":"insert","lines":["console.log(\"USERS\")"],"id":59}],[{"start":{"row":2,"column":4},"end":{"row":2,"column":24},"action":"insert","lines":["console.log(\"USERS\")"],"id":58}],[{"start":{"row":1,"column":56},"end":{"row":2,"column":0},"action":"insert","lines":["",""],"id":57},{"start":{"row":2,"column":0},"end":{"row":2,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":7,"column":4},"end":{"row":7,"column":24},"action":"remove","lines":["console.log(\"USERS\")"],"id":56}],[{"start":{"row":0,"column":0},"end":{"row":61,"column":1},"action":"remove","lines":["function getAll(req, res) {","    let sql = \"SELECT username, name, email FROM users\";","    global.connection.query(sql, function(err, results) {","        if (err) {","            console.log(err);","            return res.status(500).json(err);","        }","    console.log(\"USERS\")","        res.json(results);","    });      ","}","","function getOne(req, res) {","    let sql = \"SELECT username, name, email FROM users WHERE username=?\";","    global.connection.query(sql, req.params.username, function(err, results) {","        if (err) return res.status(500).end();","        if (results.length == 0) return res.status(404).end();","        return res.json(results[0]);","    });","}","","function createOne(req, res) {","    let sql = \"INSERT INTO users (username, name, email, password) VALUES (?,?,?,?)\";","    global.connection.query(sql, [","        req.body.username, ","        req.body.name,","        req.body.email,","        req.body.password","    ], function(err, results) {","        if (err) return res.status(500).end();","        res.json(results);","    });","}","","function updateOne(req, res) {","    let sql = \"UPDATE users SET name=?, email=?, password=? WHERE username=?\"; ","    global.connection.query(sql, [","        req.body.name,","        req.body.email,","        req.body.password, ","        req.params.username","      ], function(err, results) {","            if (err) return res.status(500).end();","            res.json(results);","    });","}","","function deleteOne(req, res) {","    let sql = \"DELETE from users WHERE username=?\"; ","    global.connection.query(sql, req.params.username, function(err, results){","        if (err) return res.status(500).end();","        res.status(204).end();","    });","}","","module.exports = {","    list: getAll,","    read: getOne,","    create: createOne,","    update: updateOne,","    delete: deleteOne","}"],"id":55,"ignore":true}],[{"start":{"row":7,"column":0},"end":{"row":7,"column":4},"action":"remove","lines":["    "],"id":54}]]},"ace":{"folds":[],"scrolltop":484,"scrollleft":0,"selection":{"start":{"row":7,"column":0},"end":{"row":7,"column":4},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":190,"mode":"ace/mode/javascript"}},"timestamp":1610657637108}